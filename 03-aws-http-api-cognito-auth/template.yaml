Transform: AWS::Serverless-2016-10-31
Description: AWS SAM HttpApi with Cognito Authorizer

Globals:
  Function:
    Timeout: 300
    Architectures:
      - x86_64

Resources:

  HttpApiGwLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
      LogGroupName: !Sub "/aws/http-api/${AWS::StackName}"

  HttpApiGw:
    DependsOn:
      - HelloWorldUserPool
      - HelloWorldUserPoolDomain
    Type: AWS::Serverless::HttpApi
    Properties:
      AccessLogSettings:
        DestinationArn: !GetAtt HttpApiGwLogGroup.Arn
        Format: '$context.identity.sourceIp - $context.requestId $context.authorizer.error'
      StageName: api
      FailOnWarnings: true
      CorsConfiguration:
        AllowMethods:
          - GET
          - POST
          - PUT
          - DELETE
        AllowOrigins:
          - '*'
        AllowHeaders:
          - '*'
      Auth:
        Authorizers:
          MyOAuthAuthorizer:
            IdentitySource: "$request.header.Authorization"
            AuthorizationScopes:
              - email
            JwtConfiguration:
              issuer: !Sub 'https://cognito-idp.${AWS::Region}.amazonaws.com/${HelloWorldUserPool}'
              audience: 
                - !Ref HelloWorldUserPoolClient
              authType: JWT
        DefaultAuthorizer: MyOAuthAuthorizer

  HelloWorldUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref HelloWorldUserPool
      GenerateSecret: false
      CallbackURLs:
        - "https://jwt.io"
      ClientName: 'caparea-net-client'
      SupportedIdentityProviders:
        - COGNITO
      AllowedOAuthFlows:
        - implicit
        - code
      AllowedOAuthScopes:
        - email
        - openid
        - profile
        - aws.cognito.signin.user.admin
        - phone
      AllowedOAuthFlowsUserPoolClient: true
      ExplicitAuthFlows:
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_CUSTOM_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH

  HelloWorldUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      UserPoolName: !Sub ${AWS::StackName}-users
      UsernameAttributes:
        - email
      Schema:
        - Name: email
          Mutable: true
          Required: true
        - Name: family_name
          Mutable: true
          Required: true
        - Name: given_name
          Mutable: true
          Required: true
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
          TemporaryPasswordValidityDays: 7

  HelloWorldUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Sub ${AWS::StackName}-users
      UserPoolId: !Ref HelloWorldUserPool

  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: main.handler
      Runtime: python3.9
      CodeUri: .
      Events:
        HelloWorld:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApiGw
            Path: /hello
            Method: get