Transform: AWS::Serverless-2016-10-31
Description: AWS Kinesis Streams and Handlers

Parameters:
  AppName:
    Type: String
    Description: Application Name
    Default: expenses
  EmployeesTableName:
    Type: String
    Description: Employees Table Name
  ExpensesTableName:
    Type: String
    Description: Expenses Table Name
  ExpensesPythonLayer:
    Type: String
    Description: Expenses Python Layer

Globals:
  Function:
    Timeout: 30
    Runtime: python3.9
    Architectures:
      - x86_64
    Layers:
      - !Ref ExpensesPythonLayer
    Environment:
      Variables:
        VERSION: 0
        REGION: !Sub '${AWS::Region}'

Resources:
  # Kinesis Streams
  OnExpenseApprovedStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: !Sub ${AppName}OnExpenseApprovedStream
      ShardCount: 1

  OnExpenseRejectedStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: !Sub ${AppName}OnExpenseRejectedStream
      ShardCount: 1

  OnExpenseSubmittedStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: !Sub ${AppName}OnExpenseSubmittedStream
      ShardCount: 1
      

  # Lambda function to handle streams.
  OnExpenseApprovedFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: handlers.on_approved
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Sub ${ExpensesTableName}
        - SESCrudPolicy:
            IdentityName: '*'
      Events:
        OnStream:
          Type: Kinesis
          Properties:
            Stream: !GetAtt OnExpenseApprovedStream.Arn
            StartingPosition: LATEST
            BatchSize: 100
      EventInvokeConfig:
        MaximumRetryAttempts: 0

  OnExpenseRejectedFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: handlers.on_rejected
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Sub ${ExpensesTableName}
        - SESCrudPolicy:
            IdentityName: '*'
      Events:
        OnStream:
          Type: Kinesis
          Properties:
            Stream: !GetAtt OnExpenseRejectedStream.Arn
            StartingPosition: LATEST
            BatchSize: 100
      EventInvokeConfig:
        MaximumRetryAttempts: 0

  OnExpenseSubmittedFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: handlers.on_submitted
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Sub ${ExpensesTableName}
        - DynamoDBCrudPolicy:
            TableName: !Sub ${EmployeesTableName}
        - SESCrudPolicy:
            IdentityName: '*'
      Events:
        OnStream:
          Type: Kinesis
          Properties:
            Stream: !GetAtt OnExpenseSubmittedStream.Arn
            StartingPosition: LATEST
            BatchSize: 100
            
      EventInvokeConfig:
        MaximumRetryAttempts: 0

Outputs:
  OnExpenseApprovedStreamArn:
    Value: !GetAtt OnExpenseApprovedStream.Arn
  OnExpenseApprovedStreamName:
    Value: !Sub ${AppName}OnExpenseApprovedStream
  OnExpenseRejectedStreamArn:
    Value: !GetAtt OnExpenseRejectedStream.Arn
  OnExpenseRejectedStreamName:
    Value: !Sub ${AppName}OnExpenseRejectedStream
  OnExpenseSubmittedStreamArn:
    Value: !GetAtt OnExpenseSubmittedStream.Arn
  OnExpenseSubmittedStreamName:
    Value: !Sub ${AppName}OnExpenseSubmittedStream